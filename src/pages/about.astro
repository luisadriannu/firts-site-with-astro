---
const pageTitle = "LuizackJS";

const identity = {
  firstName: "Luis",
  country: "Mexico",
  occupation: "Freelancer",
  hobbies: ["programming", "videogames", "voleyball"],
};

const skills = ["HTML", "CSS", "JavaScript", "React", "Astro", "Writing Docs"];

const happy = true
const finished = false
const goal = 3;
---

<!-- Se puede utilizar la sintaxis de Layout o body -->
<body title={pageTitle}> <!-- Utilizando una variable con un valor que nosotros le proporcionamos lo podemnos utilizar con {} templates -->
   <main>
    <!-- Agregar navegaciones entre paginas -->
    <ul>
      <li>
        <a href="/">Home</a>
      </li>
      <li>
        <a href="/blog/">Blog</a>
      </li>
    </ul>

    <!-- Renderizando elementos que se han declarado arriba -->
		<h1>{pageTitle}</h1>
    <h2>About me</h2>
    <li>My name is {identity.firstName}</li>
    <li>I live in  and I work as a {identity.occupation}</li>
    {identity.hobbies.length >= 2 &&
     <li>Two of my hobbies are: {identity.hobbies[0]} and {identity.hobbies[1]}</li>}
		<p>My skills are:</p>
    <ul>
      {skills.map(skill => <li>{skill}</li>)}
    </ul>

    <!-- Utilizando variables booleanas para renderizar elementos (Similar a react)-->
    {happy ? <p>I'm happy</p> : null}
    {finished ? <p>I finished my homework</p> : null}
    {goal === 3 ? <p>My goal is to finish in 3 days</p> : <p>My goal is not 3 days.</p>}
	</main>
</body>

<style>
  body{
    background-color: black;
  }

	main {
		margin: auto;
		padding: 1rem;
		width: 800px;
		max-width: calc(100% - 2rem);
		color: white;
		font-size: 20px;
		line-height: 1.6;
	}
	.astro-a {
		position: absolute;
		top: -32px;
		left: 50%;
		transform: translatex(-50%);
		width: 220px;
		height: auto;
		z-index: -1;
	}
	h1 {
		font-size: 4rem;
		font-weight: 700;
		line-height: 1;
		text-align: center;
		margin-bottom: 1em;
	}
	.text-gradient {
		background-image: var(--accent-gradient);
		-webkit-background-clip: text;
		-webkit-text-fill-color: transparent;
		background-size: 400%;
		background-position: 0%;
	}
	.instructions {
		margin-bottom: 2rem;
		border: 1px solid rgba(var(--accent-light), 25%);
		background: linear-gradient(rgba(var(--accent-dark), 66%), rgba(var(--accent-dark), 33%));
		padding: 1.5rem;
		border-radius: 8px;
	}
	.instructions code {
		font-size: 0.8em;
		font-weight: bold;
		background: rgba(var(--accent-light), 12%);
		color: rgb(var(--accent-light));
		border-radius: 4px;
		padding: 0.3em 0.4em;
	}
	.instructions strong {
		color: rgb(var(--accent-light));
	}
	.link-card-grid {
		display: grid;
		grid-template-columns: repeat(auto-fit, minmax(24ch, 1fr));
		gap: 2rem;
		padding: 0;
	}
</style>
